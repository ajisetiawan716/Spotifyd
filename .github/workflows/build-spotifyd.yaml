name: Build spotifyd (patched) - fast w/ rustup

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      TERM: xterm
      KCONFIG_NONINTERACTIVE: 1
      MAKEFLAGS: -j$(nproc)

    strategy:
      fail-fast: false
      matrix:
        sdk:
          - name: x86_64
            url: https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - name: aarch64_generic
            url: https://downloads.openwrt.org/releases/23.05.5/targets/mediatek/filogic/openwrt-sdk-23.05.5-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3 wget xz-utils git rsync pkg-config curl

      - name: Install rustup toolchain (host)
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          rustc -V && cargo -V

      - name: Download OpenWrt SDK
        run: |
          wget -q "${{ matrix.sdk.url }}" -O sdk.tar.xz
          tar xf sdk.tar.xz
          echo SDK_DIR=$(find . -maxdepth 1 -type d -name 'openwrt-sdk-*') >> $GITHUB_ENV
          echo "Using SDK dir: $SDK_DIR"

      # ---------- CACHES ----------
      - name: Cache OpenWrt dl/
        uses: actions/cache@v4
        with:
          path: ${{ env.SDK_DIR }}/dl
          key: dl-${{ matrix.sdk.name }}-23055

      - name: Cache Cargo registry/git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ matrix.sdk.name }}-23055-${{ hashFiles('package/**/Makefile') }}

      - name: Cache sccache (Rust)
        uses: actions/cache@v4
        with:
          path: ~/.cache/sccache
          key: sccache-${{ matrix.sdk.name }}-23055-${{ hashFiles('package/**/Makefile') }}

      - name: Prepare feeds (minimal)
        working-directory: ${{ env.SDK_DIR }}
        run: |
          ./scripts/feeds update -a
          # HANYA libs yg diperlukan (tanpa rust/host!)
          ./scripts/feeds install alsa-lib openssl

      - name: Non-interactive defconfig + build base toolchain
        working-directory: ${{ env.SDK_DIR }}
        env:
          FORCE_UNSAFE_CONFIGURE: 1
        run: |
          make defconfig || yes "" | make olddefconfig
          # toolchain C (cepat), TANPA rust host
          make tools/install V=s
          make toolchain/install V=s

      - name: Copy spotifyd package into SDK
        run: |
          mkdir -p "${{ env.SDK_DIR }}/package/sound"
          rsync -a package/sound/spotifyd-ng "${{ env.SDK_DIR }}/package/sound/"

      - name: Build spotifyd (use rustup cargo)
        working-directory: ${{ env.SDK_DIR }}
        env:
          FORCE_UNSAFE_CONFIGURE: 1
          RUSTC_WRAPPER: sccache
          SCCACHE_DIR: ${{ runner.temp }}/.sccache
          CARGO_HOME: ~/.cargo
          RUSTFLAGS: -C debuginfo=0
          # Pastikan cargo.mk “menemukan” cargo kita
          PATH: $HOME/.cargo/bin:${{ env.SDK_DIR }}/staging_dir/host/bin:$PATH
        run: |
          make defconfig || yes "" | make olddefconfig
          make package/spotifyd-ng/compile V=sc

          mkdir -p ../out/${{ matrix.sdk.name }}
          find bin -name "*spotifyd-ng*_*.ipk" -exec cp {} ../out/${{ matrix.sdk.name }}/ \; || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt_${{ matrix.sdk.name }}_ipk
          path: out/${{ matrix.sdk.name }}/
          if-no-files-found: error
