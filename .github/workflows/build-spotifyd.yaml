- name: Build spotifyd (download → prepare → compile)
  working-directory: ${{ env.SDK_DIR }}
  env:
    FORCE_UNSAFE_CONFIGURE: 1
    RUSTC_WRAPPER: sccache
    SCCACHE_DIR: ${{ runner.temp }}/.sccache
    CARGO_HOME: ~/.cargo
    RUSTFLAGS: -C debuginfo=0
  run: |
    # Tambah PATH di SINI (bukan di env:)
    export PATH="$HOME/.cargo/bin:${{ env.SDK_DIR }}/staging_dir/host/bin:$PATH"

    # Non-interactive config
    make defconfig || make olddefconfig

    # 1) download source (biar error fetch keliatan jelas)
    make package/spotifyd-ng/download V=sc

    # 2) prepare (unpack + Build/Prepare)
    make package/spotifyd-ng/prepare V=sc

    # 2.5) SANITY CHECK pakai find (bukan glob/test -d)
    PKGDIR="$(find build_dir -maxdepth 2 -type d -name 'spotifyd-ng-*' | head -n1)"
    if [ -z "$PKGDIR" ]; then
      echo "PKG_BUILD_DIR missing after prepare"
      echo "==== ls build_dir ===="
      ls -la build_dir || true
      echo "==== find build_dir (maxdepth 3) ===="
      find build_dir -maxdepth 3 -type d -print || true
      exit 1
    else
      echo "PKG_BUILD_DIR: $PKGDIR"
      echo "==== tree $PKGDIR/.cargo ===="
      find "$PKGDIR/.cargo" -maxdepth 2 -type f -print -exec sed -n '1,120p' {} \; || true
      echo "==== head Cargo.toml (patched) ===="
      sed -n '1,120p' "$PKGDIR/Cargo.toml" || true
    fi

    # 3) compile paket
    make package/spotifyd-ng/compile V=sc

    mkdir -p ../out/${{ matrix.sdk.name }}
    find bin -name "*spotifyd-ng*_*.ipk" -exec cp {} ../out/${{ matrix.sdk.name }}/ \; || true
