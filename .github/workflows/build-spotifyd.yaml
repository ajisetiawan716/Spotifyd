name: build-spotifyd-docker

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/build-spotifyd.yaml'

jobs:
  build:
    name: build (${{ matrix.target }})
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - target: x86_64
            rust_target: x86_64-unknown-linux-musl
            arch: x86_64
          - target: aarch64
            rust_target: aarch64-unknown-linux-musl
            arch: aarch64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build with cross Docker
        run: |
          # Build menggunakan cross (Docker-based cross compilation)
          cargo install cross --git https://github.com/cross-rs/cross
          
          git clone https://github.com/Spotifyd/spotifyd.git spotifyd-source
          cd spotifyd-source
          git checkout v0.4.1
          
          echo '[patch.crates-io]' >> Cargo.toml
          echo 'librespot = { git = "https://github.com/librespot-org/librespot.git", rev = "be37402" }' >> Cargo.toml
          
          cross build --release --no-default-features --features alsa_backend --target ${{ matrix.rust_target }}
          
          mkdir -p "$GITHUB_WORKSPACE/binaries"
          cp target/${{ matrix.rust_target }}/release/spotifyd "$GITHUB_WORKSPACE/binaries/spotifyd-${{ matrix.target }}"

      - name: Create IPK package
        run: |
          set -eux
          mkdir -p ipk/CONTROL ipk/usr/bin
          
          cp "$GITHUB_WORKSPACE/binaries/spotifyd-${{ matrix.target }}" ipk/usr/bin/spotifyd
          chmod +x ipk/usr/bin/spotifyd
          
          # Buat control file sederhana
          echo "Package: spotifyd-ng" > ipk/CONTROL/control
          echo "Version: 0.4.1-1" >> ipk/CONTROL/control
          echo "Depends: libstdcpp, libpthread, alsa-lib" >> ipk/CONTROL/control
          echo "Architecture: ${{ matrix.target }}" >> ipk/CONTROL/control
          echo "Description: Spotify daemon" >> ipk/CONTROL/control
          
          cd ipk
          tar -czf ../data.tar.gz ./
          cd CONTROL
          tar -czf ../control.tar.gz ./
          cd ..
          echo "2.0" > debian-binary
          mkdir -p "$GITHUB_WORKSPACE/out"
          tar -czf "$GITHUB_WORKSPACE/out/spotifyd-ng_0.4.1-1_${{ matrix.target }}.ipk" debian-binary control.tar.gz data.tar.gz

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spotifyd-${{ matrix.target }}-ipk
          path: out/