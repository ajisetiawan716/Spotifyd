name: build-spotifyd

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'package/**'
      - '.github/workflows/build-spotifyd.yaml'

jobs:
  build:
    name: build (${{ matrix.target }}, ${{ matrix.target_dir }}, ${{ matrix.pretty }})
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64
            target_dir: x86/64
            pretty: x86-64
            sdk: https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - target: aarch64_generic
            target_dir: mediatek/filogic
            pretty: mediatek-filogic
            sdk: https://downloads.openwrt.org/releases/23.05.5/targets/mediatek/filogic/openwrt-sdk-23.05.5-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

    env:
      FORCE_UNSAFE_CONFIGURE: 1
      TERM: xterm
      KCONFIG_NONINTERACTIVE: 1
      MAKEFLAGS: -j$(nproc)

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install host deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential g++ gcc make cmake \
            python3 python3-pip \
            git curl ca-certificates \
            pkg-config \
            libssl-dev \
            unzip xz-utils rsync
          sudo update-ca-certificates

      - name: Download & extract OpenWrt SDK
        run: |
          set -eux
          curl -fsSL "${{ matrix.sdk }}" -o sdk.tar.xz
          tar -xJf sdk.tar.xz
          SDK_DIR=$(echo openwrt-sdk-*)
          echo "SDK_DIR=$SDK_DIR" >> $GITHUB_ENV

      - name: Prepare feeds (only what we need)
        working-directory: ${{ env.SDK_DIR }}
        run: |
          set -eux
          # Pastikan ada feed packages (butuh lang/rust/cargo.mk)
          ./scripts/feeds update packages
          ./scripts/feeds install rust
          ./scripts/feeds install alsa-lib

          # Tambah feed lokal (paket spotifyd-ng) dari repo ini
          echo "src-link local $GITHUB_WORKSPACE" >> feeds.conf.default
          ./scripts/feeds update local
          ./scripts/feeds install spotifyd-ng

      - name: Minimal config (non-interactive)
        working-directory: ${{ env.SDK_DIR }}
        run: |
          set -eux
          # Generate config default tanpa menuconfig
          make defconfig

      - name: Build spotifyd-ng only
        working-directory: ${{ env.SDK_DIR }}
        env:
          RUSTFLAGS: -C debuginfo=0
        run: |
          set -eux
          # Kompilasi hanya paket kita (host Rust akan dibangun otomatis)
          make package/spotifyd-ng/compile V=sc

      - name: Collect artifacts
        working-directory: ${{ env.SDK_DIR }}
        run: |
          set -eux
          mkdir -p "$GITHUB_WORKSPACE/out/${{ matrix.target }}"
          # IPK biasanya di bawah bin/packages/<arch>/<feed>/
          find bin/packages -type f -name '*spotifyd-ng*\.ipk' -print -exec cp -v {} "$GITHUB_WORKSPACE/out/${{ matrix.target }}/" \;

      - name: Upload artifacts (${{ matrix.target }})
        uses: actions/upload-artifact@v4
        with:
          name: openwrt_${{ matrix.target }}_ipk
          path: out/${{ matrix.target }}/
          if-no-files-found: error
