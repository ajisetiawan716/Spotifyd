name: build-spotifyd-openwrt

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'package/**'
      - '.github/workflows/build-spotifyd.yaml'

jobs:
  build:
    name: build (${{ matrix.target }})
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64
            pretty: x86-64
            sdk: https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - target: aarch64
            pretty: mediatek-filogic  
            sdk: https://downloads.openwrt.org/releases/23.05.5/targets/mediatek/filogic/openwrt-sdk-23.05.5-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install basic dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential git curl xz-utils python3

      - name: Download OpenWrt SDK
        run: |
          curl -fsSL "${{ matrix.sdk }}" -o sdk.tar.xz
          tar -xf sdk.tar.xz
          echo "SDK_DIR=$(echo openwrt-sdk-*)" >> $GITHUB_ENV

      - name: Setup feeds and build spotifyd
        working-directory: ${{ env.SDK_DIR }}
        run: |
          # Update feeds
          ./scripts/feeds update packages
          
          # Install rust dan dependencies
          ./scripts/feeds install rust alsa-lib libstdcpp libpthread
          
          # Add local feed
          echo "src-link local $GITHUB_WORKSPACE/package" >> feeds.conf.default
          ./scripts/feeds update local
          ./scripts/feeds install spotifyd-ng
          
          # Build
          make package/spotifyd-ng/compile V=s

      - name: Collect artifacts
        working-directory: ${{ env.SDK_DIR }}
        run: |
          mkdir -p "$GITHUB_WORKSPACE/out/${{ matrix.target }}"
          find bin -name "*spotifyd-ng*.ipk" -exec cp {} "$GITHUB_WORKSPACE/out/${{ matrix.target }}/" \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spotifyd-${{ matrix.target }}-ipk
          path: out/${{ matrix.target }}/